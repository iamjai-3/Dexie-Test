[{"/home/iamjai/Jai/React-Workout/Dexie-Test/src/index.js":"1","/home/iamjai/Jai/React-Workout/Dexie-Test/src/reportWebVitals.js":"2","/home/iamjai/Jai/React-Workout/Dexie-Test/src/App.js":"3","/home/iamjai/Jai/React-Workout/Dexie-Test/src/Paging.jsx":"4"},{"size":473,"mtime":1612707103840,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1612707103840,"results":"7","hashOfConfig":"6"},{"size":5593,"mtime":1612713745757,"results":"8","hashOfConfig":"6"},{"size":2274,"mtime":1612707103840,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1vfismj",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/iamjai/Jai/React-Workout/Dexie-Test/src/index.js",[],["20","21"],"/home/iamjai/Jai/React-Workout/Dexie-Test/src/reportWebVitals.js",[],"/home/iamjai/Jai/React-Workout/Dexie-Test/src/App.js",[],"/home/iamjai/Jai/React-Workout/Dexie-Test/src/Paging.jsx",["22"],"import React, { useState, useEffect } from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst Paging = (props) => {\n\tconst { itemsCount, pageSize, currentPage, onPageChange } = props;\n\tconst [pages, setPages] = useState([]);\n\n\tconst totalPages = Math.ceil(itemsCount / pageSize);\n\tconst maxPages = totalPages >= 10 ? 10 : totalPages;\n\n\tuseEffect(() => {\n\t\t// Page Range Calculation\n\t\tconst range = () => {\n\t\t\tlet startPage = 0;\n\t\t\tlet endPage = 0;\n\t\t\tconst maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\n\t\t\tconst maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\n\n\t\t\tif (currentPage <= maxPagesBeforeCurrentPage) {\n\t\t\t\t// current page near the start\n\t\t\t\tstartPage = 1;\n\t\t\t\tendPage = maxPages;\n\t\t\t} else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n\t\t\t\t// current page near the end\n\t\t\t\tstartPage = totalPages - maxPages + 1;\n\t\t\t\tendPage = totalPages;\n\t\t\t} else {\n\t\t\t\t// current page somewhere in the middle\n\t\t\t\tstartPage = currentPage - maxPagesBeforeCurrentPage;\n\t\t\t\tendPage = currentPage + maxPagesAfterCurrentPage;\n\t\t\t}\n\t\t\tsetPages(Array.from(Array(endPage + 1 - startPage).keys()).map((i) => startPage + i));\n\t\t};\n\t\trange();\n\t}, [props]);\n\n\treturn (\n\t\t<div className=\"text-right\">\n\t\t\t<Pagination aria-label=\"Page navigation\" className=\"d-inline-block\">\n\t\t\t\t<PaginationItem>\n\t\t\t\t\t<PaginationLink onClick={(e) => onPageChange(1, e)} first href=\"#\" title=\"First\" />\n\t\t\t\t</PaginationItem>\n\t\t\t\t<PaginationItem disabled={currentPage <= 1}>\n\t\t\t\t\t<PaginationLink\n\t\t\t\t\t\tonClick={(e) => onPageChange(currentPage - 1, e)}\n\t\t\t\t\t\tprevious\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\ttitle=\"Previous\"\n\t\t\t\t\t/>\n\t\t\t\t</PaginationItem>\n\n\t\t\t\t{pages.map((page, i) => (\n\t\t\t\t\t<PaginationItem active={page === currentPage} key={page}>\n\t\t\t\t\t\t<PaginationLink onClick={(e) => onPageChange(page, e)} href=\"#\">\n\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t</PaginationItem>\n\t\t\t\t))}\n\t\t\t\t<PaginationItem disabled={currentPage >= totalPages}>\n\t\t\t\t\t<PaginationLink onClick={(e) => onPageChange(currentPage + 1, e)} next href=\"#\" title=\"Next\" />\n\t\t\t\t</PaginationItem>\n\t\t\t\t<PaginationItem>\n\t\t\t\t\t<PaginationLink onClick={(e) => onPageChange(totalPages, e)} last href=\"#\" title=\"Last\" />\n\t\t\t\t</PaginationItem>\n\t\t\t</Pagination>\n\t\t</div>\n\t);\n};\n\nexport default Paging;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":35,"column":5,"nodeType":"29","endLine":35,"endColumn":12,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'maxPages', and 'totalPages'. Either include them or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [currentPage, maxPages, props, totalPages]",{"range":"36","text":"37"},[1198,1205],"[currentPage, maxPages, props, totalPages]"]